params {

    // input options
    metadata_tsv                = null

    // biobakery databases
    uniref                      = "uniref90_diamond"
    chocophlan                  = "full"
    metaphlan_index             = "latest"

    // google
    google_project              = "curatedmetagenomicdata"
    google_region               = "us-central1"
    bucket                      = "gs://temp-testing-cmgd"
    store_dir                   = "${params.bucket}/store"
    publish_dir                 = "${params.bucket}/publish"
    tmp_dir                     = "${params.bucket}/tmp"
}

trace {
    enabled = true
    file = 'pipeline_trace.txt'
    fields = 'task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes,vol_ctxt,inv_ctxt'
}

executor {
    queueSize = 3000
    pollInterval = '1 min'
    queueStatInterval = '2 min'
}

weblog {
    enabled = true
    url = 'https://cmgd-telemetry-whnnxetv4q-uc.a.run.app/webhook'
}

profiles {
    bridges_node_only {
        process.module = 'singularity:git'
    	singularity.runOptions="--bind=$LOCAL"
        singularity.cacheDir="/$SCRATCH/.nextflow_cache"
    	singularity.enabled = true
	google.region = 'us-central1'
        params.publish_dir="gs://data-curatedmetagenomics/pipeline/runs"
        params.store_dir="$SCRATCH/cmgd/resources"
        process.container = 'docker://seandavi/curatedmetagenomics'
    }	

    nih_node_only {
        process.module = 'singularity:git'
    	singularity.runOptions="--bind='/vf,/gpfs,/spin1,/data,/lscratch,/scratch,/fdb'"
        singularity.cacheDir="/data/sdavis2/.nextflow_cache"
        env.http_proxy="http://dtn06-e0:3128"
        env.https_proxy="http://dtn06-e0:3128"
	env.GOOGLE_APPLICATION_CREDENTIALS="/data/sdavis2/projects/curatedMetagenomicsNextflow/curatedmetagenomicdata-f056e9ef05f6.json"
    	singularity.enabled = true
	google.region = 'us-central1'
        process.queue = "ccr,norm"
        params.publish_dir="gs://data-curatedmetagenomics/pipeline/runs"
        params.store_dir="/data/sdavis2/nf_testing/resources"
        process.container = 'docker://seandavi/curatedmetagenomics'
    }	

    nih_slurm {
        process.module = 'singularity:git'
    	singularity.runOptions="--bind='/vf,/gpfs,/spin1,/data,/lscratch,/scratch,/fdb'"
        singularity.cacheDir="/data/sdavis2/.nextflow_cache"
        env.http_proxy="http://dtn06-e0:3128"
        env.https_proxy="http://dtn06-e0:3128"
	env.GOOGLE_APPLICATION_CREDENTIALS="/data/sdavis2/projects/curatedMetagenomicsNextflow/curatedmetagenomicdata-f056e9ef05f6.json"
    	singularity.enabled = true
	process.executor = "slurm"
	google.region = 'us-central1'
        process.queue = "ccr,norm"
        params.publish_dir="gs://data-curatedmetagenomics/pipeline/runs"
        params.store_dir="/data/sdavis2/nf_testing/resources"
        process.container = 'docker://seandavi/curatedmetagenomics'
    }


    google {
    	docker.enabled = true
        google.project="${params.google_project}"  //'isb-cgc-01-0006'
    	process.container = 'seandavi/curatedmetagenomics'
        google.region = "${params.google_region}"
        process.executor = 'google-lifesciences'
	    google.lifeSciences.debug = true

        // preemptible
	    process.errorStrategy={ task.exitStatus==14 ? 'retry' : 'terminate' }
	    process.maxRetries=4
        google.lifeSciences.preemptible = true
    }

    google_sean {
    	docker.enabled = true
    	process.container = 'seandavi/curatedmetagenomics'
        google.region = 'us-central1'
        params.publish_dir="gs://temp-testing/pipeline/runs"
	params.store_dir="gs://temp-testing/nf_testing/resources"
        process.executor = 'google-lifesciences'
	google.lifeSciences.preemptible = true
	google.lifeSciences.debug = true
	process.disk = '200 GB'
	process.errorStrategy={ task.exitStatus==14 ? 'retry' : 'terminate' }
	process.maxRetries=4
    }
}
